# 
# Copyright (C) 2011-2014 Jeff Bush
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
# 
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
# Boston, MA  02110-1301, USA.
# 


#
# Create a table that computes 1/x
# The input and output will be a normalized significand with an implicit leading one.
#

import math, sys

if len(sys.argv) != 2:
	print 'enter number of entries'
	sys.exit(1)
	
NUM_ENTRIES = int(sys.argv[1])
if (NUM_ENTRIES & (NUM_ENTRIES - 1)) != 0:
	# Must be power of two
	print 'number of entries must be power of two'
	sys.exit(1)

WIDTH = int(math.log(NUM_ENTRIES, 2))

print '''
//
// This file is autogenerated by make_reciprocal_rom.py
//

module reciprocal_rom(
	input [''' + str(WIDTH - 1) + ''':0]			addr_i,
	output reg ['''  + str(WIDTH - 1) + ''':0]	data_o);

	always @*
	begin
		case (addr_i)'''


for x in range(0, NUM_ENTRIES):
	significand = NUM_ENTRIES | x
	reciprocal = int((NUM_ENTRIES * NUM_ENTRIES * 2) / significand)
	print '\t\t\t%d\'h%x: data_o = %d\'h%x;' % (WIDTH, x, WIDTH, reciprocal & (NUM_ENTRIES - 1))
	
print '''		endcase
	end
endmodule
'''
