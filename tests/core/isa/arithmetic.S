# This file auto-generated by ./generate_arithmetic.py. Do not edit.
            #include "arithmetic_macros.inc"

            .globl _start
_start:
        test_sss or, 0x7dfdfddd, 0x7d40bd5c, 0x61bde5d9
        test_vvs or, result0, voperand1, 0x73ec3e71
        test_vvsm or_mask, result1, 0x81ef, voperand1, 0x402090ef
        test_vvv or, result2, voperand1, voperand2
        test_vvvm or_mask, result3, 0xed1e, voperand1, voperand2
        test_ssi or, 0x4dbb9f57, 0x4dbb9f56, 0x13
        test_vvi or, result4, voperand1, 0x4b
        test_vvim or_mask, result5, 0x9d81, voperand1, 0x33
        test_sss and, 0xd014510a, 0xdc1d5b9b, 0xf2f6754e
        test_vvs and, result6, voperand1, 0x3b634c87
        test_vvsm and_mask, result7, 0x21cb, voperand1, 0x75c9686f
        test_vvv and, result8, voperand1, voperand2
        test_vvvm and_mask, result9, 0x5b8d, voperand1, voperand2
        test_ssi and, 0x14, 0xf5acc2d5, 0x14
        test_vvi and, result10, voperand1, 0x78
        test_vvim and_mask, result11, 0x4833, voperand1, 0x17
        test_sss xor, 0x787d88a4, 0xc2393711, 0xba44bfb5
        test_vvs xor, result12, voperand1, 0xcc1fcd3a
        test_vvsm xor_mask, result13, 0x5e5b, voperand1, 0xda61d5ac
        test_vvv xor, result14, voperand1, voperand2
        test_vvvm xor_mask, result15, 0xeff, voperand1, voperand2
        test_ssi xor, 0xc483ffc8, 0xc483ffdd, 0x15
        test_vvi xor, result16, voperand1, 0x1
        test_vvim xor_mask, result17, 0xf7e4, voperand1, 0x3d
        test_sss add_i, 0xb0557821, 0xa60ad18c, 0xa4aa695
        test_vvs add_i, result18, voperand1, 0xca45173e
        test_vvsm add_i_mask, result19, 0xbf05, voperand1, 0x39b148fc
        test_vvv add_i, result20, voperand1, voperand2
        test_vvvm add_i_mask, result21, 0x1749, voperand1, voperand2
        test_ssi add_i, 0x421f607f, 0x421f600a, 0x75
        test_vvi add_i, result22, voperand1, 0x6b
        test_vvim add_i_mask, result23, 0x975f, voperand1, 0x3f
        test_sss sub_i, 0xc7fbf2eb, 0xfeb19c7f, 0x36b5a994
        test_vvs sub_i, result24, voperand1, 0xbc0cc878
        test_vvsm sub_i_mask, result25, 0xc7ea, voperand1, 0x3c8c6fc7
        test_vvv sub_i, result26, voperand1, voperand2
        test_vvvm sub_i_mask, result27, 0x4856, voperand1, voperand2
        test_ssi sub_i, 0xd5b2091e, 0xd5b2096c, 0x4e
        test_vvi sub_i, result28, voperand1, 0x30
        test_vvim sub_i_mask, result29, 0xab73, voperand1, 0x7e
        test_sss mull_i, 0xffedd3e8, 0x2bb9302c, 0x571412e
        test_vvs mull_i, result30, voperand1, 0x44065321
        test_vvsm mull_i_mask, result31, 0x8e26, voperand1, 0x2175fada
        test_vvv mull_i, result32, voperand1, voperand2
        test_vvvm mull_i_mask, result33, 0x7a6f, voperand1, voperand2
        test_ssi mull_i, 0x3295b4c6, 0xce579a03, 0x42
        test_vvi mull_i, result34, voperand1, 0xe
        test_vvim mull_i_mask, result35, 0xf33f, voperand1, 0x44
        test_sss mulh_u, 0x3abea98, 0xa0ae3e2, 0x5d97ef4f
        test_vvs mulh_u, result36, voperand1, 0xcdf49c7d
        test_vvsm mulh_u_mask, result37, 0x756c, voperand1, 0xc4679cae
        test_vvv mulh_u, result38, voperand1, voperand2
        test_vvvm mulh_u_mask, result39, 0xd052, voperand1, voperand2
        test_ssi mulh_u, 0x16, 0x39e2ec91, 0x62
        test_vvi mulh_u, result40, voperand1, 0x38
        test_vvim mulh_u_mask, result41, 0x1e3c, voperand1, 0x79
        test_sss mulh_i, 0xfee81abb, 0xfe16c5a, 0xee5ffd15
        test_vvs mulh_i, result42, voperand1, 0xa097717d
        test_vvsm mulh_i_mask, result43, 0xeb4d, voperand1, 0x5f327491
        test_vvv mulh_i, result44, voperand1, voperand2
        test_vvvm mulh_i_mask, result45, 0xafd5, voperand1, voperand2
        test_ssi mulh_i, 0x27, 0x6c5581ca, 0x5d
        test_vvi mulh_i, result46, voperand1, 0x53
        test_vvim mulh_i_mask, result47, 0xbc0c, voperand1, 0x3
        test_sss ashr, 0xfffcfb17, 0x9f62edec, 0xd
        test_vvs ashr, result48, voperand1, 0x4
        test_vvsm ashr_mask, result49, 0x5820, voperand1, 0x2
        test_vvv ashr, result50, voperand1, voperand3
        test_vvvm ashr_mask, result51, 0x4b65, voperand1, voperand3
        test_ssi ashr, 0xfff3e303, 0xcf8c0f5a, 0xa
        test_vvi ashr, result52, voperand1, 0x1
        test_vvim ashr_mask, result53, 0x275e, voperand1, 0x6
        test_sss shr, 0x722c56, 0xe458acc3, 0x9
        test_vvs shr, result54, voperand1, 0x8
        test_vvsm shr_mask, result55, 0x12fd, voperand1, 0x3
        test_vvv shr, result56, voperand1, voperand3
        test_vvvm shr_mask, result57, 0x9d62, voperand1, voperand3
        test_ssi shr, 0x1bcd20, 0x6f348071, 0xa
        test_vvi shr, result58, voperand1, 0x8
        test_vvim shr_mask, result59, 0x770e, voperand1, 0x8
        test_sss shl, 0xd7600270, 0xad760027, 0x4
        test_vvs shl, result60, voperand1, 0xd
        test_vvsm shl_mask, result61, 0xd873, voperand1, 0xc
        test_vvv shl, result62, voperand1, voperand3
        test_vvvm shl_mask, result63, 0x8c31, voperand1, voperand3
        test_ssi shl, 0x4b670660, 0x296ce0cc, 0x3
        test_vvi shl, result64, voperand1, 0x3
        test_vvim shl_mask, result65, 0x8dc0, voperand1, 0xd
        test_ss clz, 0x0, 0xcc82fa3d
        test_vs clz, result66, 0x736dc5ab
        test_vsm clz_mask, result67, 0xd811, 0xbaf7b01f
        test_vv clz, result68, voperand2
        test_vvm clz_mask, result69, 0x6ebe, voperand2
        test_ss ctz, 0x0, 0x652e49cd
        test_vs ctz, result70, 0xb1631c54
        test_vsm ctz_mask, result71, 0x688d, 0xae32e0cd
        test_vv ctz, result72, voperand2
        test_vvm ctz_mask, result73, 0xf0ad, voperand2
        test_ss move, 0x6dadca89, 0x6dadca89
        test_vs move, result74, 0xd79458e1
        test_vsm move_mask, result75, 0x273d, 0xe5cf06d5
        test_vv move, result76, voperand2
        test_vvm move_mask, result77, 0x3200, voperand2
        call pass_test

        .align 64
voperand1:     .long 0xd990aa8e, 0x44382258, 0xfea8f644, 0x5bbc617d, 0x5b69ddea, 0x437df342, 0xbb0d8dca, 0x57db8d92, 0xf53f178a, 0xaa2e070b, 0x97388a27, 0x5835f8d5, 0xf52032fc, 0xde479ab2, 0x3f444127, 0x18a306e0
voperand2:     .long 0xb68c4798, 0x68119768, 0xc1015996, 0x8c12be37, 0x28e65fc5, 0x968b82ca, 0x99459904, 0xf1bbd88f, 0x1322c3ed, 0xe68274aa, 0x82fcd45c, 0xd7ae43f2, 0xfc3741f3, 0xeb5bfa3b, 0xb9fda1d6, 0x34022928
voperand3:     .long 0xe, 0xc, 0x10, 0x2, 0xc, 0x9, 0x6, 0x6, 0x10, 0x7, 0xe, 0xa, 0xb, 0xe, 0x9, 0x8
result0: .long 0xfbfcbeff, 0x77fc3e79, 0xffecfe75, 0x7bfc7f7d, 0x7bedfffb, 0x73fdff73, 0xfbedbffb, 0x77ffbff3, 0xf7ff3ffb, 0xfbee3f7b, 0xf7fcbe77, 0x7bfdfef5, 0xf7ec3efd, 0xffefbef3, 0x7fec7f77, 0x7bef3ef1
result1: .long 0xd9b0baef, 0x4438b2ff, 0xfea8f6ef, 0x5bbcf1ff, 0x0, 0x437df3ef, 0xfb2d9def, 0x57fb9dff, 0xf53f97ef, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58a396ef
result2: .long 0xff9cef9e, 0x6c39b778, 0xffa9ffd6, 0xdfbeff7f, 0x7befdfef, 0xd7fff3ca, 0xbb4d9dce, 0xf7fbdd9f, 0xf73fd7ef, 0xeeae77ab, 0x97fcde7f, 0xdfbffbf7, 0xfd3773ff, 0xff5ffabb, 0xbffde1f7, 0x3ca32fe8
result3: .long 0x0, 0x6c39b778, 0xffa9ffd6, 0xdfbeff7f, 0x7befdfef, 0x0, 0x0, 0x0, 0xf73fd7ef, 0x0, 0x97fcde7f, 0xdfbffbf7, 0x0, 0xff5ffabb, 0xbffde1f7, 0x3ca32fe8
result4: .long 0xd990aacf, 0x4438225b, 0xfea8f64f, 0x5bbc617f, 0x5b69ddeb, 0x437df34b, 0xbb0d8dcb, 0x57db8ddb, 0xf53f17cb, 0xaa2e074b, 0x97388a6f, 0x5835f8df, 0xf52032ff, 0xde479afb, 0x3f44416f, 0x18a306eb
result5: .long 0xd990aabf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x57db8db3, 0xf53f17bb, 0x0, 0x97388a37, 0x5835f8f7, 0xf52032ff, 0x0, 0x0, 0x18a306f3
result6: .long 0x19000886, 0x200000, 0x3a204404, 0x1b204005, 0x1b614c82, 0x3614002, 0x3b010c82, 0x13430c82, 0x31230482, 0x2a220403, 0x13200807, 0x18214885, 0x31200084, 0x1a430882, 0x3b404007, 0x18230480
result7: .long 0x5180280e, 0x44082048, 0x0, 0x5188606d, 0x0, 0x0, 0x3109084a, 0x55c90802, 0x7509000a, 0x0, 0x0, 0x0, 0x0, 0x54410822, 0x0, 0x0
result8: .long 0x90800288, 0x40100248, 0xc0005004, 0x8102035, 0x8605dc0, 0x2098242, 0x99058900, 0x519b8882, 0x11220388, 0xa202040a, 0x82388004, 0x502440d0, 0xf42000f0, 0xca439a32, 0x39440106, 0x10020020
result9: .long 0x90800288, 0x0, 0xc0005004, 0x8102035, 0x0, 0x0, 0x0, 0x519b8882, 0x11220388, 0xa202040a, 0x0, 0x502440d0, 0xf42000f0, 0x0, 0x39440106, 0x0
result10: .long 0x8, 0x58, 0x40, 0x78, 0x68, 0x40, 0x48, 0x10, 0x8, 0x8, 0x20, 0x50, 0x78, 0x30, 0x20, 0x60
result11: .long 0x6, 0x10, 0x0, 0x0, 0x2, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x15, 0x0, 0x0, 0x7, 0x0
result12: .long 0x158f67b4, 0x8827ef62, 0x32b73b7e, 0x97a3ac47, 0x977610d0, 0x8f623e78, 0x771240f0, 0x9bc440a8, 0x3920dab0, 0x6631ca31, 0x5b27471d, 0x942a35ef, 0x393fffc6, 0x12585788, 0xf35b8c1d, 0xd4bccbda
result13: .long 0x3f17f22, 0x9e59f7f4, 0x0, 0x81ddb4d1, 0x81080846, 0x0, 0x616c5866, 0x0, 0x0, 0x704fd2a7, 0x4d595f8b, 0x82542d79, 0x2f41e750, 0x0, 0xe525948b, 0x0
result14: .long 0x6f1ced16, 0x2c29b530, 0x3fa9afd2, 0xd7aedf4a, 0x738f822f, 0xd5f67188, 0x224814ce, 0xa660551d, 0xe61dd467, 0x4cac73a1, 0x15c45e7b, 0x8f9bbb27, 0x917730f, 0x351c6089, 0x86b9e0f1, 0x2ca12fc8
result15: .long 0x6f1ced16, 0x2c29b530, 0x3fa9afd2, 0xd7aedf4a, 0x738f822f, 0xd5f67188, 0x224814ce, 0xa660551d, 0x0, 0x4cac73a1, 0x15c45e7b, 0x8f9bbb27, 0x0, 0x0, 0x0, 0x0
result16: .long 0xd990aa8f, 0x44382259, 0xfea8f645, 0x5bbc617c, 0x5b69ddeb, 0x437df343, 0xbb0d8dcb, 0x57db8d93, 0xf53f178b, 0xaa2e070a, 0x97388a26, 0x5835f8d4, 0xf52032fd, 0xde479ab3, 0x3f444126, 0x18a306e1
result17: .long 0x0, 0x0, 0xfea8f679, 0x0, 0x0, 0x437df37f, 0xbb0d8df7, 0x57db8daf, 0xf53f17b7, 0xaa2e0736, 0x97388a1a, 0x0, 0xf52032c1, 0xde479a8f, 0x3f44411a, 0x18a306dd
result18: .long 0xa3d5c1cc, 0xe7d3996, 0xc8ee0d82, 0x260178bb, 0x25aef528, 0xdc30a80, 0x8552a508, 0x2220a4d0, 0xbf842ec8, 0x74731e49, 0x617da165, 0x227b1013, 0xbf654a3a, 0xa88cb1f0, 0x9895865, 0xe2e81e1e
result19: .long 0x1341f38a, 0x0, 0x385a3f40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2ef06086, 0xe3df5007, 0xd0e9d323, 0x91e741d1, 0x2ed17bf8, 0x17f8e3ae, 0x0, 0x52544fdc
result20: .long 0x901cf226, 0xac49b9c0, 0xbfaa4fda, 0xe7cf1fb4, 0x84503daf, 0xda09760c, 0x545326ce, 0x49976621, 0x861db77, 0x90b07bb5, 0x1a355e83, 0x2fe43cc7, 0xf15774ef, 0xc9a394ed, 0xf941e2fd, 0x4ca53008
result21: .long 0x901cf226, 0x0, 0x0, 0xe7cf1fb4, 0x0, 0x0, 0x545326ce, 0x0, 0x861db77, 0x90b07bb5, 0x1a355e83, 0x0, 0xf15774ef, 0x0, 0x0, 0x0
result22: .long 0xd990aaf9, 0x443822c3, 0xfea8f6af, 0x5bbc61e8, 0x5b69de55, 0x437df3ad, 0xbb0d8e35, 0x57db8dfd, 0xf53f17f5, 0xaa2e0776, 0x97388a92, 0x5835f940, 0xf5203367, 0xde479b1d, 0x3f444192, 0x18a3074b
result23: .long 0xd990aacd, 0x44382297, 0xfea8f683, 0x5bbc61bc, 0x5b69de29, 0x0, 0xbb0d8e09, 0x0, 0xf53f17c9, 0xaa2e074a, 0x97388a66, 0x0, 0xf520333b, 0x0, 0x0, 0x18a3071f
result24: .long 0x1d83e216, 0x882b59e0, 0x429c2dcc, 0x9faf9905, 0x9f5d1572, 0x87712aca, 0xff00c552, 0x9bcec51a, 0x39324f12, 0xee213e93, 0xdb2bc1af, 0x9c29305d, 0x39136a84, 0x223ad23a, 0x833778af, 0x5c963e68
result25: .long 0x0, 0x7abb291, 0x0, 0x1f2ff1b6, 0x0, 0x6f1837b, 0x7e811e03, 0x1b4f1dcb, 0xb8b2a7c3, 0x6da19744, 0x5aac1a60, 0x0, 0x0, 0x0, 0x2b7d160, 0xdc169719
result26: .long 0x230462f6, 0xdc268af0, 0x3da79cae, 0xcfa9a346, 0x32837e25, 0xacf27078, 0x21c7f4c6, 0x661fb503, 0xe21c539d, 0xc3ab9261, 0x143bb5cb, 0x8087b4e3, 0xf8e8f109, 0xf2eba077, 0x85469f51, 0xe4a0ddb8
result27: .long 0x0, 0xdc268af0, 0x3da79cae, 0x0, 0x32837e25, 0x0, 0x21c7f4c6, 0x0, 0x0, 0x0, 0x0, 0x8087b4e3, 0x0, 0x0, 0x85469f51, 0x0
result28: .long 0xd990aa5e, 0x44382228, 0xfea8f614, 0x5bbc614d, 0x5b69ddba, 0x437df312, 0xbb0d8d9a, 0x57db8d62, 0xf53f175a, 0xaa2e06db, 0x973889f7, 0x5835f8a5, 0xf52032cc, 0xde479a82, 0x3f4440f7, 0x18a306b0
result29: .long 0xd990aa10, 0x443821da, 0x0, 0x0, 0x5b69dd6c, 0x437df2c4, 0xbb0d8d4c, 0x0, 0xf53f170c, 0xaa2e068d, 0x0, 0x5835f857, 0x0, 0xde479a34, 0x0, 0x18a30662
result30: .long 0xaa46064e, 0x2c6ef558, 0x7137cac4, 0x63d2181d, 0x7714792a, 0xc4a6c182, 0x7c73c50a, 0x9b9f95d2, 0x46ffc6ca, 0xf279796b, 0x6bfe7407, 0x47a02275, 0x2b96467c, 0xc68ea6f2, 0x2bd60b07, 0xb17e82e0
result31: .long 0x0, 0xf38f2ef0, 0x2d741de8, 0x0, 0x0, 0x27f99a34, 0x0, 0x0, 0x0, 0x8119bd5e, 0x27e2bb36, 0x14ee762, 0x0, 0x0, 0x0, 0x33ea9ac0
result32: .long 0x86daa650, 0xdae7dbc0, 0x2ee1efd8, 0xbc9db7db, 0x920d9b12, 0xf7bf7614, 0xf765f128, 0x2ebd448e, 0x78aae8c2, 0x5357a94e, 0xf71df204, 0x86eaf85a, 0xdea66134, 0x8ad87b06, 0x6292fd9a, 0x8352f300
result33: .long 0x86daa650, 0xdae7dbc0, 0x2ee1efd8, 0xbc9db7db, 0x0, 0xf7bf7614, 0xf765f128, 0x0, 0x0, 0x5357a94e, 0x0, 0x86eaf85a, 0xdea66134, 0x8ad87b06, 0x6292fd9a, 0x0
result34: .long 0xe5e953c4, 0xbb11e0d0, 0xed3d77b8, 0x44d54d6, 0xffca22cc, 0xb0e34d9c, 0x3abdc10c, 0xce01bdfc, 0x6973498c, 0x4e84629a, 0x45178e22, 0xd2f39ba6, 0x67c2c9c8, 0x27ea75bc, 0x75bb9022, 0x58ea6040
result35: .long 0xca6d4db8, 0x1ee91f60, 0xa4e16a10, 0x5e09e534, 0x481ef228, 0xed749d88, 0x0, 0x0, 0x24c240a8, 0x3439deec, 0x0, 0x0, 0x1c8d8af0, 0xb051748, 0xce214e5c, 0x8b4dd380
result36: .long 0xaf08bb74, 0x36e222b4, 0xcce0a1ea, 0x49cd81b1, 0x498b1f7d, 0x364c5919, 0x967c95cd, 0x46aec355, 0xc54ddbe6, 0x88e97789, 0x79a8c4f5, 0x46f7819f, 0xc535015b, 0xb2d3bb00, 0x32e61be6, 0x13d216f3
result37: .long 0x0, 0x0, 0xc3606e63, 0x46615b94, 0x0, 0x33c7bf3a, 0x8f82157e, 0x0, 0xbc279081, 0x0, 0x74047e12, 0x0, 0xbc0fdd03, 0xaa88c94a, 0x3089dd10, 0x0
result38: .long 0x9b241136, 0x1bbb7e06, 0xbffeb970, 0x3231bcb8, 0xe9acdfc, 0x27b09466, 0x6ffdf432, 0x52f627f9, 0x1254fcd2, 0x993c1341, 0x4d600f40, 0x4a516013, 0xf1809b40, 0xcc5b97ba, 0x2df70188, 0x50152a1
result39: .long 0x0, 0x1bbb7e06, 0x0, 0x0, 0xe9acdfc, 0x0, 0x6ffdf432, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf1809b40, 0x0, 0x2df70188, 0x50152a1
result40: .long 0x2f, 0xe, 0x37, 0x14, 0x13, 0xe, 0x28, 0x13, 0x35, 0x25, 0x21, 0x13, 0x35, 0x30, 0xd, 0x5
result41: .long 0x0, 0x0, 0x78, 0x2b, 0x2b, 0x1f, 0x0, 0x0, 0x0, 0x50, 0x47, 0x29, 0x73, 0x0, 0x0, 0x0
result42: .long 0xe530355, 0xe6934e79, 0x7fd8b7, 0xddcfa039, 0xddee60c0, 0xe6d8b1fd, 0x19b22142, 0xdf41a45c, 0x401fa9e, 0x1ffbf876, 0x270cd017, 0xdf1ff1a0, 0x40d7e0d, 0xc913346, 0xe86bd4df, 0xf6d17081
result43: .long 0xf1b51c0b, 0x0, 0xff806fc7, 0x221cfcbd, 0x0, 0x0, 0xe65c70de, 0x0, 0xfc004b29, 0xe0162a86, 0x0, 0x20cd6a0c, 0x0, 0xf375ed09, 0x1786cc50, 0x9295a9c
result44: .long 0xb071f10, 0x1bbb7e06, 0x546996, 0xd6755b3b, 0xe9acdfc, 0xe432a124, 0x1baacd64, 0xfb1a9a67, 0xff3238e5, 0x88b978c, 0x332ab0bd, 0xf21b673e, 0x292651, 0x2b802cd, 0xeeb2c061, 0x50152a1
result45: .long 0xb071f10, 0x0, 0x546996, 0x0, 0xe9acdfc, 0x0, 0x1baacd64, 0xfb1a9a67, 0xff3238e5, 0x88b978c, 0x332ab0bd, 0xf21b673e, 0x0, 0x2b802cd, 0x0, 0x50152a1
result46: .long 0xfffffff3, 0x16, 0xffffffff, 0x1d, 0x1d, 0x15, 0xffffffe9, 0x1c, 0xfffffffc, 0xffffffe4, 0xffffffde, 0x1c, 0xfffffffc, 0xfffffff5, 0x14, 0x7
result47: .long 0x0, 0x0, 0xffffffff, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfffffffe, 0x1, 0xffffffff, 0xffffffff, 0x0, 0x0
result48: .long 0xfd990aa8, 0x4438225, 0xffea8f64, 0x5bbc617, 0x5b69dde, 0x437df34, 0xfbb0d8dc, 0x57db8d9, 0xff53f178, 0xfaa2e070, 0xf97388a2, 0x5835f8d, 0xff52032f, 0xfde479ab, 0x3f44412, 0x18a306e
result49: .long 0x0, 0x0, 0x0, 0x0, 0x0, 0x10df7cd0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x160d7e35, 0xfd480cbf, 0x0, 0xfd11049, 0x0
result50: .long 0xffff6642, 0x44382, 0xfffffea8, 0x16ef185f, 0x5b69d, 0x21bef9, 0xfeec3637, 0x15f6e36, 0xfffff53f, 0xff545c0e, 0xfffe5ce2, 0x160d7e, 0xfffea406, 0xffff791e, 0x1fa220, 0x18a306
result51: .long 0xffff6642, 0x0, 0xfffffea8, 0x0, 0x0, 0x21bef9, 0xfeec3637, 0x0, 0xfffff53f, 0xff545c0e, 0x0, 0x160d7e, 0x0, 0x0, 0x1fa220, 0x0
result52: .long 0xecc85547, 0x221c112c, 0xff547b22, 0x2dde30be, 0x2db4eef5, 0x21bef9a1, 0xdd86c6e5, 0x2bedc6c9, 0xfa9f8bc5, 0xd5170385, 0xcb9c4513, 0x2c1afc6a, 0xfa90197e, 0xef23cd59, 0x1fa22093, 0xc518370
result53: .long 0x0, 0x110e089, 0xfffaa3d9, 0x16ef185, 0x16da777, 0x0, 0xfeec3637, 0x0, 0xffd4fc5e, 0xfea8b81c, 0xfe5ce228, 0x0, 0x0, 0xff791e6a, 0x0, 0x0
result54: .long 0xd990aa, 0x443822, 0xfea8f6, 0x5bbc61, 0x5b69dd, 0x437df3, 0xbb0d8d, 0x57db8d, 0xf53f17, 0xaa2e07, 0x97388a, 0x5835f8, 0xf52032, 0xde479a, 0x3f4441, 0x18a306
result55: .long 0x1b321551, 0x0, 0x1fd51ec8, 0xb778c2f, 0xb6d3bbd, 0x86fbe68, 0x1761b1b9, 0xafb71b2, 0x0, 0x1545c0e1, 0x0, 0x0, 0x1ea4065f, 0x0, 0x0, 0x0
result56: .long 0x36642, 0x44382, 0xfea8, 0x16ef185f, 0x5b69d, 0x21bef9, 0x2ec3637, 0x15f6e36, 0xf53f, 0x1545c0e, 0x25ce2, 0x160d7e, 0x1ea406, 0x3791e, 0x1fa220, 0x18a306
result57: .long 0x0, 0x44382, 0x0, 0x0, 0x0, 0x21bef9, 0x2ec3637, 0x0, 0xf53f, 0x0, 0x25ce2, 0x160d7e, 0x1ea406, 0x0, 0x0, 0x18a306
result58: .long 0xd990aa, 0x443822, 0xfea8f6, 0x5bbc61, 0x5b69dd, 0x437df3, 0xbb0d8d, 0x57db8d, 0xf53f17, 0xaa2e07, 0x97388a, 0x5835f8, 0xf52032, 0xde479a, 0x3f4441, 0x18a306
result59: .long 0x0, 0x443822, 0xfea8f6, 0x5bbc61, 0x0, 0x0, 0x0, 0x0, 0xf53f17, 0xaa2e07, 0x97388a, 0x0, 0xf52032, 0xde479a, 0x3f4441, 0x0
result60: .long 0x1551c000, 0x44b0000, 0x1ec88000, 0x8c2fa000, 0x3bbd4000, 0xbe684000, 0xb1b94000, 0x71b24000, 0xe2f14000, 0xc0e16000, 0x1144e000, 0xbf1aa000, 0x65f8000, 0xf3564000, 0x8824e000, 0x60dc0000
result61: .long 0xaa8e000, 0x82258000, 0x0, 0x0, 0x9ddea000, 0xdf342000, 0xd8dca000, 0x0, 0x0, 0x0, 0x0, 0x5f8d5000, 0x32fc000, 0x0, 0x44127000, 0x306e0000
result62: .long 0x2aa38000, 0x82258000, 0xf6440000, 0x6ef185f4, 0x9ddea000, 0xfbe68400, 0xc3637280, 0xf6e36480, 0x178a0000, 0x17038580, 0x2289c000, 0xd7e35400, 0x197e000, 0xe6ac8000, 0x88824e00, 0xa306e000
result63: .long 0x2aa38000, 0x0, 0x0, 0x0, 0x9ddea000, 0xfbe68400, 0x0, 0x0, 0x0, 0x0, 0x2289c000, 0xd7e35400, 0x0, 0x0, 0x0, 0xa306e000
result64: .long 0xcc855470, 0x21c112c0, 0xf547b220, 0xdde30be8, 0xdb4eef50, 0x1bef9a10, 0xd86c6e50, 0xbedc6c90, 0xa9f8bc50, 0x51703858, 0xb9c45138, 0xc1afc6a8, 0xa90197e0, 0xf23cd590, 0xfa220938, 0xc5183700
result65: .long 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb1b94000, 0x71b24000, 0xe2f14000, 0x0, 0x1144e000, 0xbf1aa000, 0x0, 0x0, 0x0, 0x60dc0000
result66: .long 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1
result67: .long 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
result68: .long 0x0, 0x1, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2
result69: .long 0x0, 0x1, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
result70: .long 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2
result71: .long 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
result72: .long 0x3, 0x3, 0x1, 0x0, 0x0, 0x1, 0x2, 0x0, 0x0, 0x1, 0x2, 0x1, 0x0, 0x0, 0x1, 0x3
result73: .long 0x3, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3
result74: .long 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1, 0xd79458e1
result75: .long 0xe5cf06d5, 0x0, 0xe5cf06d5, 0xe5cf06d5, 0xe5cf06d5, 0xe5cf06d5, 0x0, 0x0, 0xe5cf06d5, 0xe5cf06d5, 0xe5cf06d5, 0x0, 0x0, 0xe5cf06d5, 0x0, 0x0
result76: .long 0xb68c4798, 0x68119768, 0xc1015996, 0x8c12be37, 0x28e65fc5, 0x968b82ca, 0x99459904, 0xf1bbd88f, 0x1322c3ed, 0xe68274aa, 0x82fcd45c, 0xd7ae43f2, 0xfc3741f3, 0xeb5bfa3b, 0xb9fda1d6, 0x34022928
result77: .long 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe68274aa, 0x0, 0x0, 0xfc3741f3, 0xeb5bfa3b, 0x0, 0x0
